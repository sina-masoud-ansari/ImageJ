<!-- Ant makefile for ImageJ -->
<project name="ImageJ" default="test" basedir=".">
	<property name="src.main" location="src/main"/>
	<property name="src.test" location="src/test"/>
	<property name="reports.test" location="reports"/>
	<property name="build.dir" location="build"/>
	<property name="lib.dir" location="lib"/>
	<property name="bin.dir" location="bin"/>
	<property name="plugins.dir" location="plugins"/>
	<property name="macros.dir" location="macros"/>
	<property name="reports.dir" location="reports"/>
	<property name="resources.build" location="resources/build"/>
	<property name="resources.test" location="resources/test" />
	<property name="hexa.rt" location="/usr/lib/jvm/java-1.6.0-openjdk/jre/lib/rt.jar" />

	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${lib.dir}/ant-contrib-0.6.jar"/>
		</classpath>
	</taskdef>

	<path id="build.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="run.classpath">
		<fileset dir="${bin.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="compile" description="Compile everything">
		<mkdir dir="${build.dir}" />
		<javac destdir="${build.dir}" classpathref="build.classpath" optimize="on" source="1.6" target="1.6" debug="on" encoding="UTF-8">
			<src path="${src.main}"/>
			<src path="${src.test}"/>
		</javac>
	</target>


	<target name="compile_test" description="Compile everything">
		<!-- First, ensure the build directory exists. -->
		<mkdir dir="${build.dir}" />
		<!-- Build everything; add debug="on" to debug -->
		<!-- If compiling on hexa.ece.auckland.ac.nz use bootclasspath parameter -->
		<if>
			<available file="${hexa.rt}"/>
			<then>
				<javac destdir="${build.dir}" classpathref="build.classpath" optimize="on" source="1.6" target="1.6" debug="on" encoding="UTF-8" bootclasspath="/usr/lib/jvm/java-1.6.0-openjdk/jre/lib/rt.jar">
					<src path="${src.main}"/>
					<src path="${src.test}"/>
				</javac>
			</then>
			<else>
				<javac destdir="${build.dir}" classpathref="build.classpath" optimize="on" source="1.6" target="1.6" debug="on" encoding="UTF-8">
					<src path="${src.main}"/>
					<src path="${src.test}"/>
				</javac>
			</else>
		</if>

	</target>

	<target name="build" depends="compile" description="Build ij.jar.">
		<!-- Copy needed files into the build directory. -->
		<copy file="${resources.build}/IJ_Props.txt" todir="${build.dir}" />
		<copy file="${resources.build}/images/microscope.gif" tofile="${build.dir}/microscope.gif" />
		<copy file="${resources.build}/images/about.jpg" tofile="${build.dir}/about.jpg" />
		<copy file="${resources.build}/plugins/MacAdapter.class" tofile="${build.dir}/MacAdapter.class" />
		<copy file="${resources.build}/plugins/JavaScriptEvaluator.class" tofile="${build.dir}/JavaScriptEvaluator.class" />
		<copy file="${resources.build}/plugins/MacClipboard.class" tofile="${build.dir}/MacClipboard.class" />
		<copy todir="${build.dir}/macros">
			<fileset dir="${resources.build}/macros"/>
		</copy>
		<!-- Build ij.jar. -->
		<mkdir dir="${bin.dir}" />
		<jar jarfile="${bin.dir}/ij.jar" basedir="${build.dir}" manifest="MANIFEST.MF" />
	</target>

	<target name="clean" description="Delete the build files.">
		<delete dir="${build.dir}" />
	</target>

	<target name="headless" depends="build" description="Build and run ImageJ in headless mode">
		<!-- WHY IS THIS NEEDED ? -->
		<!-- <copy file="ij.jar" toDir=".." /> -->
		<java maxmemory="1024m" classpathref="run.classpath" classname="ij.ImageJ" fork="yes">
			<arg value="-batch" />
		</java>
	</target>

	<target name="test" depends="build" description="Compile source and initiate tests">
		<delete dir="${reports.dir}" />
		<mkdir dir="${reports.dir}" />
		<mkdir dir="${build.dir}/dump" />
		<mkdir dir="${build.dir}/resources" />
		<copy todir="${build.dir}/resources">
			<fileset dir="${resources.test}" />
		</copy>
		<junit printsummary="withOutAndErr" haltonfailure="yes">
			<classpath path="${build.dir}" />
			<classpath refid="build.classpath" />
			<classpath refid="run.classpath" />
			<formatter type="xml" />
			<batchtest fork="yes" todir="${reports.test}">
				<fileset dir="${src.test}">
					<include name="**/*Test*.java" />
					<!-- <exclude name="**/AllTests.java"/> -->
				</fileset>
			</batchtest>
		</junit>
		<!--
		<junitreport todir="${reports.test}">
			<fileset dir="${reports.test}">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${reports.test}" />
		</junitreport>
		-->

	</target>

	<target name="run" depends="build" description="Build and run ImageJ.">
		<java maxmemory="1024m" jar="${bin.dir}/ij.jar" fork="yes"/>
	</target>

	<target name="debug" depends="build" description="Build and debug ImageJ.">
		<java maxmemory="1024m" jar="${bin.dir}/ij.jar" fork="yes">
			<jvmarg value="-Xdebug" />
			<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000" />
		</java>
	</target>

	<!-- NOT USED -->
	<target name="zip" depends="clean" description="Build zrc.zip.">
		<zip zipfile="../src.zip" basedir=".." includes="source/**" />
	</target>

	<!-- NOT USED -->
	<target name="javadocs" description="Build the JavaDocs.">
		<delete dir="../api" />
		<mkdir dir="../api" />
		<javadoc 
           sourcepath="."
           packagenames="ij.*"
           destdir="../api"
           author="true"
           version="true"
           use="true"
           windowtitle="ImageJ API">
		</javadoc>
	</target>

</project>

